//
//  SetupPresenter.swift
//  EthereumSigner
//
//  Created by Djordje Ljubinkovic on 08/02/2020.
//  Copyright (c) 2020 Djordje Ljubinkovic. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SetupPresentationLogic {
    func presentInitialState(_ response: Setup.InitialState.Response)
    func presentAccountAndBalance(_ response: Setup.Account.Response)
}

class SetupPresenter: SetupPresentationLogic {
    
    private struct Constants {
        static let MaximumCharactersAllowed: Int = 64
    }
    
    weak var viewController: SetupDisplayLogic?
    
    // MARK: Presentation Logic
    
    func presentInitialState(_ response: Setup.InitialState.Response) {
        let validationConfiguration = ValidationConfiguration(maximumCharactersAllowed: .limited(Constants.MaximumCharactersAllowed),
                                                              onTextDidChangeCompletion: response.onTextDidChangeClosure)
        let viewModel = Setup.InitialState.ViewModel(validationConfiguration: validationConfiguration)
        viewController?.displayInitialState(viewModel)
    }
    
    func presentAccountAndBalance(_ response: Setup.Account.Response) {
        let wallet = response.wallet
        let viewModel = Setup.Account.ViewModel(accountAddress: wallet.accountAddress, walletBalance: wallet.balance)
        viewController?.displayAccountAndBalance(viewModel)
    }
}
